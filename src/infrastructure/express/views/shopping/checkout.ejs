<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <%- include('../partials/head') %>
</head>
<body class="main-layout bg-light">
    <%- include('../partials/header') %>
    <div class="container py-5">
        <div class="row">
            <div class="col-md-8 mb-4">
                <div class="shadow p-4 bg-white rounded">
                    <h4 class="mb-3 border-bottom pb-2">Informações de Pagamento</h4>

                    <div class="mb-3">
                        <label class="form-label">Método de Pagamento</label>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="metodo_pagamento" id="pagamentoCartao" value="cartao" checked>
                            <label class="form-check-label" for="pagamentoCartao">Cartão de Crédito</label>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="radio" name="metodo_pagamento" id="pagamentoPix" value="pix">
                            <label class="form-check-label" for="pagamentoPix">PIX</label>
                        </div>
                    </div>

                <div class="mb-3">
                    <label for="enderecoSelecionado" class="form-label">Selecione o Endereço de Entrega</label>
                    <select class="form-select" id="enderecoSelecionado" name="enderecoSelecionado">
                        <% if (enderecos && enderecos.length > 0) { %>
                            <% enderecos.forEach(end => { %>
                                <option 
                                    value="<%= end.id %>"
                                    data-nick="<%= end.nick %>"
                                    data-street="<%= end.street %>"
                                    data-number="<%= end.number %>"
                                    data-city="<%= end.city %>"
                                    data-zipcode="<%= end.zipcode %>"
                                    <%= end.id === endereco.id ? 'selected' : '' %>
                                >
                                    <%= end.nick %> - <%= end.street %>, <%= end.number %>, <%= end.city %> - CEP <%= end.zipcode %>
                                </option>
                            <% }) %>
                        <% } else { %>
                            <option disabled selected>Nenhum endereço cadastrado</option>
                        <% } %>
                    </select>
                    <button type="button" class="btn btn-success mt-3" onclick="window.location.href='/user'">
                        Criar novo endereço
                    </button>
                </div>


                    <form action="/cart/checkout" method="POST">
                        <div class="mb-4 p-3 border rounded bg-light">
                            <p class="fw-bold text-muted">Endereço Padrão</p>

                            <div class="mb-2">
                                <label for="nome" class="form-label">Nome Completo</label>
                                <input type="text" class="input-readonly" id="nome" name="nome" value="<%= nome %>" readonly>
                            </div>

                            <div class="mb-2">
                                <label for="email" class="form-label">E-mail</label>
                                <input type="email" class="input-readonly" id="email" name="email" value="<%= email %>" readonly>
                            </div>

                            <div class="mb-2">
                                <label for="endereco" class="form-label">Endereço Padrão (Nome: '<%= apelido %>')</label>
                                <input type="text" class="input-readonly" id="endereco" name="endereco" value="<%= endereco || '' %>" readonly>
                            </div>

                            <div class="mb-2">
                                <label for="cidade" class="form-label">Cidade</label>
                                <input type="text" class="input-readonly" id="cidade" name="cidade" value="<%= cidade || '' %>" readonly>
                            </div>

                            <div class="mb-2">
                                <label for="cep" class="form-label">CEP</label>
                                <input type="text" class="input-readonly" id="cep" name="cep" value="<%= cep || '' %>" readonly>
                            </div>
                        </div>

                        <div class="mb-4">
                            <label class="form-label">Pagamento:</label>
                            <div id="pagamento-cartao-container">
                                <div id="cartoes-container">
                                    <% if (cartoes && cartoes.length > 0) { %>
                                        <div class="input-group mb-2">
                                            <select class="form-select me-2" name="pagamentos_cartao[0][id]">
                                                <% cartoes.forEach(cartao => { %>
                                                    <option value="<%= cartao.id %>">
                                                        <%= cartao.holder_name %> - **** **** **** <%= cartao.card_number.slice(-4) %> (expira <%= cartao.expiration_date %>)
                                                    </option>
                                                <% }) %>
                                            </select>
                                            <input type="number" min="0.01" step="0.01" class="" name="pagamentos_cartao[0][valor]" placeholder="Valor (R$)">
                                        </div>
                                    <% } else { %>
                                        <p class="text-danger">Nenhum cartão salvo</p>
                                    <% } %>
                                </div>
                                <button type="button" class="btn btn-secondary mt-2" id="add-cartao">Adicionar outro cartão</button>
                            </div>
                            <div id="pagamento-pix-container" class="mt-3" style="display: none;">
                                <p>Você receberá um QR Code após finalizar o pedido.</p>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="cupomPromocional" class="form-label">Digite o cupom promocional:</label>
                            <div class="input-group">
                                <input type="text" id="cupomPromocional" name="promotionalCupomCode" class="input-readonly-coupon">
                                <button type="button" class="btn btn-success" style="height: 40px;" id="aplicarCupom">Aplicar Cupom</button>
                            </div>
                            <small id="cupomMensagem" class="form-text text-muted text-center d-block mt-2"></small>
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Digite os cupons de troca:</label>
                            <div id="cupom-container" style="margin-bottom: 30px;">
                                <input type="text" class="input-readonly-new" name="cupons_troca[]" placeholder="Digite o cupom de troca">
                            </div>
                            <button type="button" class="btn btn-primary mb-3" id="add-cupom">Adicionar mais cupom</button>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-success btn-finalizar">Finalizar Pedido</button>
                        </div>
                    </form>
                </div>
            </div>

            <div class="col-md-4">
                <div class="shadow p-3 bg-white rounded">
                    <div class="mb-3" id = "checkout-box">
                        <h5>Taxas e Frete</h5>
                        <p><strong>Subtotal:</strong> R$ <%= total.replace('.', ',') %></p>
                        <p><strong>Frete:</strong> R$ 50,00</p>
                        <hr>
                        <h4><strong>Total:</strong> R$ <%= (parseFloat(total.replace(',', '.')) + 50).toFixed(2).replace('.', ',') %></h4>
                    </div>

                    <h5 class="mt-4 mb-2">Resumo do Pedido</h5>
                    <ul class="list-group mb-3">
                        <% if (items && items.length > 0) { %>
                            <% items.forEach(item => { %>
                                <li class="list-group-item d-flex justify-content-between align-items-center">
                                    <%= item.name %> 
                                    <span>R$ <%= item.price %></span>
                                </li>
                            <% }) %>
                        <% } else { %>
                            <li class="list-group-item">Nenhum produto no carrinho</li>
                        <% } %>
                        <li class="list-group-item active d-flex justify-content-between">
                            Total
                            <span id="globalTotal">R$ <%= (parseFloat(total.replace(',', '.')) + 50).toFixed(2).replace('.', ',') %></span>
                        </li>
                    </ul>

                    <div class="d-grid">
                        <button class="btn btn-outline-secondary" onclick="window.location.href='/cart/view'">Voltar ao Carrinho</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>

<script>


document.addEventListener('DOMContentLoaded', function () {
    const selectEndereco = document.getElementById('enderecoSelecionado');
    
    // Preenche os campos com o endereço selecionado ao carregar a página
    const selected = selectEndereco.options[selectEndereco.selectedIndex];

    const nick = selected.getAttribute('data-nick') || '';
    const street = selected.getAttribute('data-street') || '';
    const number = selected.getAttribute('data-number') || '';
    const city = selected.getAttribute('data-city') || '';
    const zipcode = selected.getAttribute('data-zipcode') || '';

    document.getElementById('endereco').value = `${street}, ${number}`;
    document.getElementById('cidade').value = city;
    document.getElementById('cep').value = zipcode;

    // Atualiza o texto do apelido no label
    const labelEndereco = document.querySelector("label[for='endereco']");
    if (labelEndereco) {
        labelEndereco.innerText = `Endereço Padrão (Nome: '${nick}')`;
    }

    // Adiciona o evento para quando o usuário alterar a seleção
    selectEndereco.addEventListener('change', function () {
        const selected = selectEndereco.options[selectEndereco.selectedIndex];

        const nick = selected.getAttribute('data-nick') || '';
        const street = selected.getAttribute('data-street') || '';
        const number = selected.getAttribute('data-number') || '';
        const city = selected.getAttribute('data-city') || '';
        const zipcode = selected.getAttribute('data-zipcode') || '';

        document.getElementById('endereco').value = `${street}, ${number}`;
        document.getElementById('cidade').value = city;
        document.getElementById('cep').value = zipcode;

        // Atualiza o texto do apelido no label
        const labelEndereco = document.querySelector("label[for='endereco']");
        if (labelEndereco) {
            labelEndereco.innerText = `Endereço Padrão (Nome: '${nick}')`;
        }
    });
});

        
document.getElementById('add-cupom').addEventListener('click', function() {
    const container = document.getElementById('cupom-container');
    const newInput = document.createElement('input');
    newInput.type = 'text';
    newInput.classList.add('input-readonly-new');
    newInput.name = 'cupons_troca[]';  // Nome atualizado aqui também
    newInput.placeholder = 'Digite o cupom de troca';
    container.appendChild(newInput);
});

const totalOriginal = parseFloat("<%= total %>"); // pega o total sem desconto do backend



const radios = document.querySelectorAll('input[name="metodo_pagamento"]');
const containers = {
    cartao: document.getElementById('pagamento-cartao-container'),
    pix: document.getElementById('pagamento-pix-container')
};

radios.forEach(radio => {
    radio.addEventListener('change', () => {
        Object.entries(containers).forEach(([key, el]) => {
            el.style.display = radio.value === key ? 'block' : 'none';
        });
    });
});




document.getElementById('aplicarCupom').addEventListener('click', async () => {
    const cupom = document.getElementById('cupomPromocional').value.trim();
    const mensagem = document.getElementById('cupomMensagem');

    if (!cupom) {
        mensagem.textContent = "Digite um cupom primeiro.";
        return;
    }

    try {
        const response = await fetch('/cart/aplicar-cupom', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({ code: cupom })
        });

        const result = await response.json();

        if (response.ok) {
            console.log(result)
            const desconto = totalOriginal * (result.discountPercentage / 100);
            const totalComDesconto = totalOriginal - desconto + 50;
            globalTotal = document.querySelector("span[id='globalTotal']");
            globalTotal.textContent = `R$ ${totalComDesconto.toFixed(2).replace('.', ',')}`;
            document.querySelector('#checkout-box').innerHTML = `
                <h5>Taxas e Frete</h5>
                <p><strong>Subtotal:</strong> R$ ${totalOriginal.toFixed(2).replace('.', ',')}</p>
                <p><strong>Frete:</strong> R$ 50,00</p>
                <p><strong>Desconto cupom (${cupom}):</strong> <span style="color:red">- R$ ${desconto.toFixed(2).replace('.', ',')}</span></p>
                <hr>
                <h4><strong>Total:</strong> R$ ${totalComDesconto.toFixed(2).replace('.', ',')}</h4>
            `;


            mensagem.textContent = result.message;
        } else {
            mensagem.textContent = result.message || "Erro ao aplicar cupom.";
        }
    } catch (err) {
        mensagem.textContent = "Erro na comunicação com o servidor.";
        console.error(err);
    }
});

let cartaoIndex = 1;
document.getElementById('add-cartao').addEventListener('click', function () {
// Verifica se o número de cartões adicionados é menor que o número de cartões no array
if (cartaoIndex < <%= cartoes.length %>) {
        const container = document.getElementById('cartoes-container');
        
        // Cria o HTML do cartão
        const selectHtml = `<select class="" name="pagamentos_cartao[${cartaoIndex}][id]">
            <% cartoes.forEach(cartao => { %>
                <option value="<%= cartao.id %>">
                    <%= cartao.holder_name %> - **** **** **** <%= cartao.card_number.slice(-4) %> (expira <%= cartao.expiration_date %>)
                </option>
            <% }) %>
        </select>`;

        const inputHtml = `<input height = 38px type="number" min="0.01" step="0.01" class="" name="pagamentos_cartao[${cartaoIndex}][valor]" placeholder="Valor (R$)" id="cartao-${cartaoIndex}">`;

        // Botão de remover
        const removeButtonHtml = `<button type="button" class="btn btn-danger btn-sm" style="height: 38px;" onclick="removeCartao(this)">X</button>`;

        const div = document.createElement('div');
        div.className = 'input-group mb-2';
        div.innerHTML = selectHtml + inputHtml + removeButtonHtml;

        container.appendChild(div);

        cartaoIndex++;
    }
});

// Função para remover o cartão
function removeCartao(button) {
    const cartaoDiv = button.closest('.input-group');
    cartaoDiv.remove();
    cartaoIndex += -1;
}
    
document.querySelector('form').addEventListener('submit', function (e) {
    const inputsValores = document.querySelectorAll('input[name^="pagamentos_cartao"][name$="[valor]"]');
    const inputValorCupons = document.querySelector('input[name="valor_cupons"]'); // campo oculto ou visível com o valor dos cupons
    let totalCartao = 0;
    let erro = false;
    let mensagensErro = [];

    // Valor dos cupons (se não houver, assume 0)
    let valorCupons = 0;
    if (inputValorCupons && inputValorCupons.value.trim() !== '') {
        valorCupons = parseFloat(inputValorCupons.value.replace(',', '.')) || 0;
    }

    inputsValores.forEach((input, index) => {
        const valor = parseFloat(input.value.replace(',', '.'));

        if (isNaN(valor)) {
            erro = true;
            mensagensErro.push(`O valor do cartão ${index + 1} não pode estar vazio.`);
        } else {
            totalCartao += valor;

            if (valor < 10 && valorCupons <= 0) {
                erro = true;
                mensagensErro.push(`O valor do cartão ${index + 1} deve ser no mínimo R$ 10,00 ou parte da compra deve ser paga com cupons.`);
            }
        }
    });

    // Total da compra
    const totalCompraTexto = document.getElementById('globalTotal').innerText.replace('R$', '').replace(',', '.');
    const totalCompra = parseFloat(totalCompraTexto);

    const totalSomado = totalCartao + valorCupons;

    if (Math.abs(totalSomado - totalCompra) > 0.01) {
        erro = true;
        mensagensErro.push(
            `A soma dos cartões (R$ ${totalCartao.toFixed(2).replace('.', ',')}) e dos cupons (R$ ${valorCupons.toFixed(2).replace('.', ',')}) deve ser igual ao total da compra (R$ ${totalCompra.toFixed(2).replace('.', ',')}).`
        );
    }

    if (erro) {
        e.preventDefault();
        alert(mensagensErro.join('\n'));
    }
});

</script>
